machine:
  services:
    - docker
test:
  override:
    - echo "No tests!"

deployment:
  production:
    tag: /^[0-9]+\.[0-9]+\.[0-9]+$/
    commands:
      - docker run --rm -v $(pwd):/usr/src/myapp -w /usr/src/myapp -e CGO_ENABLED=0 -e GOOS=linux -e GOARCH=amd64 golang:1.8 bash -c "go get -d -v; go build -a --installsuffix cgo -v -o radar"
      - docker build --no-cache=true -t ictu/radar .
      - docker tag ictu/radar ictu/radar:${CIRCLE_TAG}
      - MAJOR_VERSION=${CIRCLE_TAG/.*}; docker tag ictu/radar:${CIRCLE_TAG} ictu/radar:${MAJOR_VERSION}
      - MINOR_VERSION=${CIRCLE_TAG%.*}; docker tag ictu/radar:${CIRCLE_TAG} ictu/radar:${MINOR_VERSION}
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker push ictu/radar
      - docker push ictu/radar:${CIRCLE_TAG}
      - docker push ictu/radar:${MINOR_VERSION}
      - docker push ictu/radar:${MAJOR_VERSION}
  master:
    branch: master
    commands:
      - docker run --rm -v $(pwd):/usr/src/myapp -w /usr/src/myapp -e CGO_ENABLED=0 -e GOOS=linux -e GOARCH=amd64 golang:1.8 bash -c "go get -d -v; go build -a --installsuffix cgo -v -o radar"
      - docker build --no-cache=true -t ictu/radar .
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker push ictu/radar
